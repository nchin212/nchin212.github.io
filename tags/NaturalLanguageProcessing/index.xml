<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NaturalLanguageProcessing on Nicholas Chin Wei Lun</title>
    <link>https://nchin212.github.io/tags/NaturalLanguageProcessing/</link>
    <description>Recent content in NaturalLanguageProcessing on Nicholas Chin Wei Lun</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://nchin212.github.io/tags/NaturalLanguageProcessing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sentiment Analysis</title>
      <link>https://nchin212.github.io/post/sentiment_analysis/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nchin212.github.io/post/sentiment_analysis/</guid>
      <description>Sentiment Analysis is a natural language processing technique used to determine whether data is positive, negative or neutral. It helps companies gauge customer sentiments on their products from customer reviews. In this project, we will be examining Amazon reviews for video games and using some machine learning models for sentiment analysis. We will also be comparing between 2 vectorizer techniques, CountVectorizer and TfidfVectorizer.
Data The data contains a collection of video game reviews written in the Amazon.</description>
    </item>
    
    <item>
      <title>Word Prediction</title>
      <link>https://nchin212.github.io/post/word_prediction/</link>
      <pubDate>Mon, 02 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nchin212.github.io/post/word_prediction/</guid>
      <description>Around the world, people are spending an increasing amount of time on their mobile devices for email, social networking, banking and a whole range of other activities. But typing on mobile devices can be a serious pain. The goal of this project is to learn and build predictive text models in R.
This project was done as part of the Johns Hopkins University Data Science Capstone Project. In this project, the stupid backoff algorithm will be used to build a predictive text model.</description>
    </item>
    
  </channel>
</rss>
